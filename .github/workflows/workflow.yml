name: Deploy docker images
on:
  release:
    types: [published]

jobs:
  deploy_image:
    runs-on: ubuntu-20.04
    name: Push image to packages
    steps:

      - name: Get tag
        run: |
          SHA=${GITHUB_SHA::7}
          echo "::set-output name=SHA_SHORT::${SHA}"
          echo "::set-output name=BRANCH::${{ github.event.release.target_commitish}}" # this for on release
          TAGNAME=clio:${SHA}
          echo "::set-output name=TAGNAME::${TAGNAME}"
        id: tag_name

      - name: Checkout
        uses: actions/checkout@v3

      - name: Test
        run: |
          docker build . -t ${{ github.repository_owner }}/${{ github.event.repository.name }}
          docker tag ${{ github.repository_owner }}/${{ github.event.repository.name }} ${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.tag_name.outputs.SHA_SHORT }}
      # - name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USER }}
      #     password: ${{ secrets.DOCKERHUB_PW }}

      # - name: Push to dockerhub
      #   run: |
      #     docker push ${{ github.repository_owner }}/${{ github.event.repository.name }}
      #     docker tag ${{ github.repository_owner }}/${{ github.event.repository.name }} ${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.tag_name.outputs.BRANCH }}
      #     docker push ${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.tag_name.outputs.BRANCH }}
      #     if [[ "${{ steps.tag_name.outputs.BRANCH }}" == "main" ]];then
      #       docker tag ${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.tag_name.outputs.BRANCH }} ${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
      #       docker push ${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
      #     fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to ghcr
        run: |
          docker tag ${{ github.repository_owner }}/${{ github.event.repository.name }}   ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
## This creates "packages" in GitHub but requires an update to the docker version on self-hosted runners
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v2
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
